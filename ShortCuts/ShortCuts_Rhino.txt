; *(asterisk)
; Causes the command to repeat automatically
; without pressing Enter to restart.

; !(exclamation point)
; Cancels the previous command.
; An exclamation point (!) and a space
; in the beginning of a macro cancels any previous command.
; At other locations, it cancels the macro.
; If necessary, the exclamation point can be used
; at the end of the macro.

; _(underscore)
; Runs command as English command name.
; Rhino can be localized in many languages.
; The non-English versions will have commands,
; prompts, command options, dialog boxes, menus, etc.,
; translated into their respective languages.
; English commands will not work in these versions.

; For scripts written in English to work on all computers
; (regardless of the language of Rhino),
; the scripts need to force Rhino to interpret all commands
; as English command names.

; For example: In the English version of Rhino,
; the following macro works:
; Circle 3Point 0,0,0 1,1,0 0,3,0
; But in the French version of Rhino, this won't work.
; Instead you need one of these macros:
; Cercle 3Point 0,0,0 1,1,0 0,3,0
; _Circle _3Point 0,0,0 1,1,0 0,3,0

; To make sure macros work worldwide,
; write them in English and put _ in front
; of all command names and options.

; -(hyphen)
; Suppress dialog box.
; All commands can be made into macros at the command line
; (even commands that have dialog boxes by default).
; To suppress the dialog box and use command-line options,
; prefix the command name with a hyphen (-).

; '(apostrophe)
; The next command is a nestable command.
; View and construction plane manipulation
; and object snaps are nestable.
; Geometry creation commands are not nestable.

; One-shot object snaps and sub-object picking filters
; are automatically nestable
; and do not require an apostrophe.

; \(backslash)
; If the last character in a toolbar button macro is "\",
; the macro runs without proceeding Enter at the end.

; For example:
; Create a toolbar button with a macro "5\".
; Clicking the button enters 5 to the command line
; and stops there for further input.
; This feature can be used to create a toolbar
; that works like an on-screen numeric keypad.

; ~(tilde)
; Suppresses command options for clutter free command feedback.
; The options still work as usual.

; ;(semicolon)
; Comment.
; Lines beginning with a semicolon (;)
; are not part of the macro,
; but let you document the macro or try alternative input.

; For example:
;   ; This is a test macro
;   _Circle 0,0,0 15
;   _Line 0,0,0 pause ;15,0,0
;   ; Line 0,0,0 0,15,0
;   _Line 0,0,0 -15,0,0

; ::(double colon)	
; Layer nesting is indicated
; by a double colon - "::" between layer names.
; In the -Layer command,
; add a new layer nested under Layer 01 using a macro like this:
;     _-Layer New "Layer 01:: New Layer" Enter

AdvancedDisplay ! _OptionsPage _AdvancedSettings
DisplayAttrsMgr ! _OptionsPage _AdvancedSettings
PlugInManager ! _OptionsPage _PlugIns

; C       '_SelCrossing
A         '_Arc
AF        '-_MatchProperties
AV        '_Divide
C         '_Copy
COff      '_CurvatureGraphOff
COn       '_CurvatureGraph
CR        '_Circle
DA        '_EvaluatePt
DD        '_Distance
E         '_Delete
EX        '_Extend
EXS       '_ExtendSrf
F         '_Fillet
FA        '_Orient
FF        '_Offset
FFS       '_OffsetSrf
FS        '_ConnectSrf
GG        '_Join
OP        '_Options
PF        '_PointsOn
PO        '_PointsOff
Q         '_Line
QQ        '_Polyline
R         '_Rotate3D
RR        '_Rebuild
SA        '_CPlane
T         '_Trim
TT        '_Split
U         '_Undo
VD        '_PointsOnRR '_RebuildF
VDC       '_PointsOff
W         ! _Move
WE        '_Mirror
X         '_Explode

